// <auto-generated />
using System;
using Futoverseny.adatok;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Futoverseny.Migrations
{
    [DbContext(typeof(FutoversenyContext))]
    partial class FutoversenyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Futoverseny.adatok.TavolsagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Megnevezes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Megnevezes")
                        .IsUnique();

                    b.ToTable("TavolsagModel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Megnevezes = "maraton"
                        },
                        new
                        {
                            Id = 2,
                            Megnevezes = "félmaraton"
                        },
                        new
                        {
                            Id = 3,
                            Megnevezes = "10km"
                        },
                        new
                        {
                            Id = 4,
                            Megnevezes = "5km"
                        },
                        new
                        {
                            Id = 5,
                            Megnevezes = "2km"
                        });
                });

            modelBuilder.Entity("Futoverseny.adatok.VersenyzoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Korosztaly")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Neme")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Rajtszam")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SzuletesiDatum")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TavolsagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Rajtszam")
                        .IsUnique();

                    b.HasIndex("TavolsagId");

                    b.ToTable("Versenyzok");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Korosztaly = "senior",
                            Neme = "fiu",
                            Nev = "Sanyi",
                            Rajtszam = 1,
                            TavolsagId = 3
                        });
                });

            modelBuilder.Entity("Futoverseny.adatok.VersenyzoModel", b =>
                {
                    b.HasOne("Futoverseny.adatok.TavolsagModel", "Tavolsag")
                        .WithMany()
                        .HasForeignKey("TavolsagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tavolsag");
                });
#pragma warning restore 612, 618
        }
    }
}
